<project default="war:install"
    xmlns:j="jelly:core"
    xmlns:license="license"
    xmlns:util="jelly:util"
    xmlns:ant="jelly:ant"
    xmlns:artifact="artifact"
    xmlns:deploy="deploy"
    xmlns:define="jelly:define"
    xmlns:sample="sample">

    <j:set var="webapp" value="${maven.build.dir}/${pom.artifactId}"/>
    <j:set var="maven.war.src" value="${webapp}"/>
    <define:taglib uri="sample">
        <define:tag name="installWar">
            <j:set var="framework" value="${framework}"/>
            <delete dir="${webapp}"/>
            <copy todir="${webapp}">
                <fileset dir="${basedir}/src/webapps/${framework}"/>
            </copy>
            <attainGoal name="war:webapp"/>
		   <jar jarfile="${maven.build.dir}/${pom.artifactId}-${framework}.war">
            	   <fileset dir="${pom.getPluginContext('maven-war-plugin').getVariable('maven.war.webapp.dir')}"/>
	       </jar>
        </define:tag>
        <define:tag name="deployWar">
            <j:set var="framework" value="${framework}"/>
            <deploy:artifact
                artifact="${maven.build.dir}/${pom.artifactId}-${framework}.war"
                type="wars"
                assureDirectoryCommand="mkdir -p"
                siteCommand="cd @deployDirectory@"
                />
        </define:tag>
    </define:taglib>

    <postGoal name="war:install">
        <sample:installWar framework="nanoweb"/>
        <sample:installWar framework="struts"/>
        <sample:installWar framework="webwork"/>
    </postGoal>

    <postGoal name="war:deploy">    		
        <sample:deployWar framework="nanoweb"/>
        <sample:deployWar framework="struts"/>
        <sample:deployWar framework="webwork"/>
    </postGoal>

    <goal name="deploy:tomcat" prereqs="war:install">
        <ant:property environment="env"/>
        <ant:copy todir="${env.TOMCAT_HOME}/webapps">
            <ant:fileset dir="${maven.build.dir}">
                <ant:include name="${pom.artifactId}-*.war"/>
            </ant:fileset>
        </ant:copy>
        <ant:delete dir="${env.TOMCAT_HOME}/webapps/${pom.artifactId}-nanoweb" failonerror="false"/>
        <ant:delete dir="${env.TOMCAT_HOME}/webapps/${pom.artifactId}-struts" failonerror="false"/>
        <ant:delete dir="${env.TOMCAT_HOME}/webapps/${pom.artifactId}-webwork" failonerror="false"/>
    </goal>

    <preGoal name="test:test">
        <mkdir dir="${webapp}/WEB-INF/classes"/>
        <copy todir="${webapp}/WEB-INF/classes">
            <fileset dir="${basedir}/target/classes"/>
        </copy>

        <mkdir dir="${webapp}/WEB-INF/lib"/>

        <j:forEach var="lib" items="${pom.artifacts}">
            <j:set var="dep" value="${lib.dependency}"/>
            <j:if test="${dep.getProperty('war.bundle')=='true'}">
                <j:if test="${dep.type =='jar'}">
                    <copy todir="${webapp}/WEB-INF/lib" file="${lib.path}"/>
                </j:if>
            </j:if>
        </j:forEach>
    </preGoal>

</project>
