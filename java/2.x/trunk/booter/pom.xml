<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.picocontainer</groupId>
  <artifactId>picocontainer-booter</artifactId>
  <version>2.0-SNAPSHOT</version>
  <name>PicoContainer Booter</name>
  <packaging>jar</packaging>
  <dependencies>
    <dependency>
      <groupId>org.picocontainer</groupId>
      <artifactId>picocontainer</artifactId>
      <version>2.10.2</version>
    </dependency>
    <dependency>
      <groupId>org.picocontainer.script</groupId>
      <artifactId>picocontainer-script-core</artifactId>
      <version>2.0.2-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.picocontainer.script</groupId>
      <artifactId>picocontainer-script-groovy</artifactId>
      <version>2.0</version>
      <scope>integration-test</scope>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all-minimal</artifactId>
      <version>1.5.6</version>
      <scope>integration-test</scope>
    </dependency>
    <dependency>
      <groupId>qdox</groupId>
      <artifactId>qdox</artifactId>
      <version>1.6.1</version>
      <scope>integration-test</scope>
    </dependency>
  </dependencies>
  <pluginRepositories>
    <pluginRepository>
      <id>apache-plugin-snapshots-repository</id>
      <name>Apache Plugin Snapshots Repository</name>
      <url>http://people.apache.org/repo/m2-snapshot-repository</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>
  <build>
    <sourceDirectory>src/java</sourceDirectory>
    <testSourceDirectory>src/test</testSourceDirectory>
    <resources>
      <resource>
        <directory>src/java</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </resource>
    </resources>
    <testResources>
      <testResource>
        <directory>src/test</directory>
        <excludes>
          <exclude>**/*.java</exclude>
        </excludes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <source>1.5</source>
          <target>1.5</target>
          <encoding>UTF-8</encoding>
          <optimize>false</optimize>
          <debug>true</debug>
          <showDeprecation>true</showDeprecation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <mainClass> org.picocontainer.booter.PicoContainerBooter </mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-lib-common</id>
            <phase>integration-test</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.picocontainer</groupId>
                  <artifactId>picocontainer</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>commons-cli</groupId>
                  <artifactId>commons-cli</artifactId>
                </artifactItem>
              </artifactItems>
              <outputDirectory> ${project.build.directory}/booter/lib/common </outputDirectory>
              <overWriteReleases>true</overWriteReleases>
              <overWriteSnapshots> true </overWriteSnapshots>
            </configuration>
          </execution>
          <execution>
            <id>copy-lib-hidden</id>
            <phase>integration-test</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>org.picocontainer.script</groupId>
                  <artifactId>picocontainer-script-core</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.picocontainer.script</groupId>
                  <artifactId>picocontainer-script-groovy</artifactId>
                </artifactItem>
                <artifactItem>
                  <groupId>org.codehaus.groovy</groupId>
                  <artifactId>groovy-all-minimal</artifactId>
                </artifactItem>
              </artifactItems>
              <outputDirectory>${project.build.directory}/booter/lib/hidden</outputDirectory>
              <overWriteReleases>true</overWriteReleases>
              <overWriteSnapshots> true </overWriteSnapshots>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <executions>
          <execution>
            <phase>integration-test</phase>
            <goals>
              <goal>run</goal>
            </goals>
            <configuration>
              <tasks>
                <!--  Create test components -->
                <mkdir dir="${project.build.directory}/test-comps" />
                <jar jarfile="${project.build.directory}/test-comps/api.jar">
                  <fileset dir="${project.build.directory}/test-classes/">
                    <include name="**/Bear.class" />
                    <include name="**/Honey.class" />
                  </fileset>
                </jar>
                <jar jarfile="${project.build.directory}/test-comps/bearimpl.jar">
                  <fileset dir="${project.build.directory}/test-classes/">
                    <include name="**/BrownBear.class" />
                  </fileset>
                </jar>
                <jar jarfile="${project.build.directory}/test-comps/honeyimpl.jar">
                  <fileset dir="${project.build.directory}/test-classes/">
                    <include name="**/BeeHiveHoney.class" />
                  </fileset>
                </jar>
                <!-- Copy to booter bin dist -->
                <copy todir="${project.build.directory}/booter">
                  <fileset dir="src/bin">
                    <include name="booter.policy" />
                    <include name="picocontainer.*" />
                  </fileset>
                  <fileset dir="src/test">
                    <include name="composition.*" />
                  </fileset>
                  <filterset>
                    <filter token="VER" value="${pom.version}" />
                  </filterset>
                </copy>
                <chmod file="${project.build.directory}/booter/picocontainer.sh" perm="+x" />
                <copy todir="${project.build.directory}/booter/lib">
                  <fileset dir="${project.build.directory}">
                    <include name="${pom.artifactId}-${pom.version}.jar" />
                  </fileset>
                </copy>                                
                <!-- Copy to booter/test-comps -->
                <copy todir="${project.build.directory}/booter/test-comps">
                  <fileset dir="${project.build.directory}/test-comps">
                    <include name="*.jar" />
                  </fileset>
                </copy>
              </tasks>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
