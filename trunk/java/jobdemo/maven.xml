<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:j="jelly:core"
        xmlns:ant="jelly:ant"
        xmlns:maven="jelly:maven"
        default="jar:jar">
        
    <goal name="binary:install" prereqs="war:install"/>
    <goal name="xdoclet">
        <path id="xdoclet.task.classpath">
            <path refid="maven.dependency.classpath"/>
        </path>

        <taskdef
                name="xdoclet"
                classname="org.xdoclet.ant.XDocletTask"
                classpathref="xdoclet.task.classpath"/>
        <xdoclet>
            <fileset dir="${pom.build.sourceDirectory}">
                <include name="**/*.java"/>
            </fileset>
            <component classname="org.generama.VelocityTemplateEngine"/>
            <component classname="org.generama.JellyTemplateEngine"/>

            <component
                    classname="org.xdoclet.plugin.hibernate.HibernateMappingPlugin"
                    destdir="${basedir}/target/xdoclet/hibernatedoclet" />
            <component
                    classname="org.xdoclet.plugin.webwork.ViewsPropertiesPlugin"
                    destdir="${basedir}/target/xdoclet/webwork"/>
        </xdoclet>

    </goal>

    <preGoal name="java:compile">
        <!--
        <attainGoal name="jrefactory:pretty"/> 
        <path id="xdoclet.java.compile.src.set" location="${basedir}/target/xdoclet/xdoclet"/>
        <maven:addPath id="maven.compile.src.set" refid="xdoclet.java.compile.src.set"/>
        -->
        <attainGoal name="xdoclet"/>
    </preGoal>
    
      <!--
    provide velocity properties for debug puproses
  -->
    <postGoal name="war:webapp">
        <j:if test="${debug.webapp}">
            <echo>using debugging velocity configuration</echo>
            <copy todir="${maven.war.webapp.dir}/WEB-INF/classes" file="${basedir}/src/debug/velocity.properties">
                <filterset>
                    <filter token="webappsource" value="${maven.war.src}"/>
                </filterset>
            </copy>
        </j:if>
    </postGoal>
    
     
  <goal name="deploy">
    <attainGoal name="war:war"/>
    <copy todir="${war.deploy.dir}" file="${maven.war.build.dir}/${maven.war.final.name}"/>
  </goal>

</project>

