<?xml version="1.0" encoding="UTF-8"?>

<project default="jar" name="picocontainer" basedir=".">
    <property name="defaulttargetdir" value="target">
    </property>
    <property name="libdir" value="target/lib">
    </property>
    <property name="classesdir" value="target/classes">
    </property>
    <property name="testclassesdir" value="target/test-classes">
    </property>
    <property name="testreportdir" value="target/test-reports">
    </property>
    <property name="distdir" value="dist">
    </property>
    <property name="javadocdir" value="dist/docs/api">
    </property>
    <property name="final.name" value="picocontainer-1.0">
    </property>
    <target name="init" description="o Initializes some properties">
        <mkdir dir="${libdir}">
        </mkdir>
        <condition property="noget">
            <equals arg2="only" arg1="${build.sysclasspath}">
            </equals>
        </condition>
    </target>
    <target name="compile" description="o Compile the code">
        <mkdir dir="${classesdir}">
        </mkdir>
        <javac destdir="${classesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
            <src>
                <pathelement location="${basedir}/src/java">
                </pathelement>
            </src>
            <!--            <classpath>-->
            <!--                <fileset dir="${libdir}">-->
            <!--                    <include name="*.jar">-->
            <!--                    </include>-->
            <!--                </fileset>-->
            <!--            </classpath>-->
        </javac>
    </target>
    <target name="jar" description="o Create the jar" depends="compile,test">
        <jar jarfile="target/${final.name}.jar" excludes="**/package.html" basedir="${classesdir}">
        </jar>
    </target>
    <target name="clean" description="o Clean up the generated directories">
        <delete dir="${defaulttargetdir}">
        </delete>
        <delete dir="${distdir}">
        </delete>
    </target>
    <target name="dist" description="o Create a distribution" depends="jar, javadoc">
        <mkdir dir="dist">
        </mkdir>
        <copy todir="dist">
            <fileset dir="${defaulttargetdir}" includes="*.jar">
            </fileset>
            <fileset dir="${basedir}" includes="LICENSE*, README*">
            </fileset>
        </copy>
    </target>

    <target name="test" description="o Run the test cases" if="test.failure" depends="internal-test">
        <fail message="There were test failures.">
        </fail>
    </target>
    <target name="internal-test" depends="compile-tests">
        <mkdir dir="${testreportdir}">
        </mkdir>
        <junit dir="./" failureproperty="test.failure" printSummary="yes" fork="true" haltonerror="true">
            <sysproperty key="basedir" value=".">
            </sysproperty>
            <formatter type="xml">
            </formatter>
            <formatter usefile="false" type="plain">
            </formatter>
            <classpath>
                <!--                <fileset dir="${libdir}">-->
                <!--                    <include name="*.jar">-->
                <!--                    </include>-->
                <!--                </fileset>-->
                <pathelement path="${testclassesdir}">
                </pathelement>
                <pathelement path="${classesdir}">
                </pathelement>
            </classpath>
            <batchtest todir="${testreportdir}">
                <fileset dir="${basedir}/src/test">
                    <include name="**/*TestCase.java"/>
                    <exclude name="**/Abstract*"/>
                </fileset>
            </batchtest>
        </junit>
    </target>
    <target name="compile-tests" depends="compile">
        <mkdir dir="${testclassesdir}">
        </mkdir>
        <javac destdir="${testclassesdir}" deprecation="true" debug="true" optimize="false" excludes="**/package.html">
            <src>
                <pathelement location="${basedir}/src/test">
                </pathelement>
            </src>
            <classpath>
                <!--                <fileset dir="${libdir}">-->
                <!--                    <include name="*.jar">-->
                <!--                    </include>-->
                <!--                </fileset>-->
                <pathelement path="${classesdir}">
                </pathelement>
            </classpath>
        </javac>
    </target>
    <target name="javadoc" description="o Generate javadoc" depends="jar">
        <mkdir dir="${javadocdir}">
        </mkdir>
        <tstamp>
            <format pattern="2004-yyyy" property="year">
            </format>
        </tstamp>
        <property name="copyright" value="Copyright &amp;copy; PicoContainer Organization. All Rights Reserved.">
        </property>
        <property name="title" value="PicoContainer 1.0 API">
        </property>
        <javadoc use="true" private="true" destdir="${javadocdir}" author="true" version="true" sourcepath="${basedir}/src/java" packagenames="org.picocontainer.*">
            <classpath>
                <!--                <fileset dir="${libdir}">-->
                <!--                    <include name="*.jar">-->
                <!--                    </include>-->
                <!--                </fileset>-->
                <pathelement location="target/${final.name}.jar">
                </pathelement>
            </classpath>
        </javadoc>
    </target>

    <target name="cvs:make-patch" description="Creates a patch of *your* changes">
        <cvs command="-q diff -b -u -N" output="patch.txt"/>
        <echo>
      Please create a new issue in PicoContainer's JIRA:
      http://jira.codehaus.org/secure/BrowseProject.jspa?id=10120
      Then attach the patch.txt file.
      If your patch consists of entirely new files too, please zip them
      up and attach them too.

      If your patch includes JUnit tests and a decent description,
      you increase the chance of having the patch applied by some
      of the committers.
        </echo>
    </target>
</project>