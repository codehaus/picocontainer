<?xml version="1.0" encoding="UTF-8"?>
<faqs title="Frequently Asked Questions">

  <part id="general">
    <title>General</title>

    <faq id="why-another">
      <question>
        Why another IoC framework?
      </question>
      <answer>
        <p>
          After a long period of watching IoC frameworks, and for some of us avoiding them because of their 
          cumbersome nature, we got together to write what we believe is the simplest possible IoC design. One 
          perhaps that considers the so-design component as more important that the container.
        </p>
      </answer>
    </faq>

    <faq id="uber-pico">
      <question>
        Is a single Uber|Super|BorgCollectivePicoContainer in development? Something that can do all things 
        for all people in all deployment situations?
      </question>
      <answer>
        <p>
          No. We are delivering small interoperable containers and components of containers. There will never be a 
          quest for the BorgContainer. We encourage diversity and compatibility with the essential idea here - 
          components designed along the PicoContainer principles (dependancies and config in constructors). 
        </p>
      </answer>
    </faq>

    <faq id="required-pico">
      <question>
        Do I have to use PicoContainer to manage or use components designed for it?
      </question>
      <answer>
        <p>
          No. Components are instantiable and configurable without useing PicoContainer. This was one of the 
          design goals. 
        </p>
      </answer>
    </faq>

    <faq id="tdd">
      <question>
        Is it true that PicoContainer is developed along the principles of Test Driven Development (TDD)?
      </question>
      <answer>
        <p>
          Yes for the most part. We're not perfect though and our coverage reports have sometimes shown 
          that we are making/committing un tested code. At those rare moments we switch some attention 
          to test coverage and whip out the electric cattle prod to reprimand the offender (usually Paul). 
        </p>
      </answer>
    </faq>

  </part>

  <part id="component-design">
    <title>Component Design</title>

    <faq id="many-constructors">
      <question>
        Can my component use multiple constructors?
      </question>
      <answer>
        <p>
          Yes.
        </p>
      </answer>
    </faq>

    <faq id="constructor-resolution">
      <question>
        How does PicoContainer decide what constructor to use?
      </question>
      <answer>
        <p>
          PicoContainer will instantiate a given component using the "greediest" satisfiable constructor.
          By greedy, we mean the constructor that takes the most parameters.
          By satisfiable, we mean constructors where all arguments can be satisfied by other.
        </p>
        <p>
          If there are no satisfiable constructors, or two or more ambiguous "largest" constructors,
          a RuntimeException will be thrown when you ask for the component instance.
        </p>
        <p>
          We recommend, for the sake of predictablility, that PicoContainer compatible components
          use only one constructor (see <a href="good-citizens.html">Good Citizens</a>), although this is by no means
          a requirement.
        </p>
      </answer>
    </faq>

    <faq id="multiple-impls">
      <question>
        If I register a component with a registry key that is not a java.lang.Class,
        I realise I can have multiple instances registered with different names.
        How are these dependencies automatically resolved for a new component that needs this
        named instance passed to its constructor?
     </question>
      <answer>
        <p>
          These dependencies need to be manually bound at configuration time by doing
        </p>
        <source>
container.registerComponent(
    SomeComponent.class, 
    new Parameter[] { 
        new ComponentParameter(keyUsedToRegisterSomeOtherCompoent) 
    }
);
        </source>
      </answer>
    </faq>

    <faq id="comp-dep-non-comp">
      <question>
        What if my component depend on non-component objects (such as configuration, ints and strings)?
      </question>
      <answer>
        <p>
          Yes great, We also pass in configuration by constructor. This is not the simplest mode of operation of the default PicoContainer, but it is by no means hard.
        </p>
      </answer>
    </faq>

  </part>

  <part id="competition">
    <title>Competition</title>
   
    <faq id="avalon">
      <question>
        How does PicoContainer framework compare to Avalon?
      </question>
      <answer>
        <p>
          Avalon's Serviceable, Configurable and Initializable interfaces are eliminated. A component writer does 
          not have to import anything like those.  For Startable we have a replacement design in our lifecycle 
          package. We're not precious though and suggest that you may prefer to use your own lifecycle interfaces
          which may be more than just start() and stop().
        </p>
      </answer>
    </faq>
    
    <faq id="avalon">
      <question>
        How does PicoContainer compare to EJB?
      </question>
      <answer>
        <p>
          Oh blimey, it is rather different. EJB has loads of things you must extend, implement, provide and throw. It is also not an IoC design. It is close in that comps are managed by a container, but the cumbersome and static nature of the JNDI lookups ensure that it is not actually IoC.  PicoContainer is not a superset of EJB though, as it provides no remoting capability. At least the PicoContainer compatible comps hosted in this project do not. 
        </p>
      </answer>
    </faq>
    
  </part> 

  
  <part id="install-n-deployment">
    <title>Installation And Deployment</title>
   
    <faq id="how-install">
      <question>
        How do I install PicoContainer?
      </question>
      <answer>
        <p>
          Like any other library that comes in a jar. Just make sure it's on your application's classpath.
        </p>
      </answer>
    </faq>
    
    <faq id="where-use">
      <question>
        Can I use PicoContainer in EJB, Servlets, Applets, Portlets, Mailets, Beans, Classes, 
        AnotherComponentFrameworks?
      </question>
      <answer>
        <p>
          Yes.
        </p>
      </answer>
    </faq>
    
    
  </part> 
  
</faqs>